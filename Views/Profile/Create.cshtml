@model CreateProfileViewModel

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-9 col-lg-6">
            <div class="card">
                <div class="card-header text-center">
                    <h4> Skapa profil </h4>
                </div>
                <div class="card-body">
					<form method="post" asp-action="Create" enctype="multipart/form-data">
                        <!--Förnamn-->
                        <div class="form-floating">
                            <input type="text" asp-for="FirstName" id="Firstname" class="form-control" placeholder="Input Firstname here" />
                            <label for="Firstname" class="form-label">Förnamn</label>
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>

                        <!--Efternamn-->
                        <div class="form-floating mt-2">
                            <input type="text" asp-for="LastName" id="Lastname" class="form-control" placeholder="Input Lastname here" />
                            <label for="Lastname" class="form-label">Efternamn</label>
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>


                        <!--Kontaktuppgifter-->
                        <div class="form-floating mt-2">
                            <div class="input-group mt-3">
                                <div class="dropdown">
                                    <button class="btn btn-outline-primary dropdown-toggle" type="button" id="contactDropDown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Välj kontakttyp
                                    </button>
                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        <a class="dropdown-item" href="#" data-value="Email">Email</a>
                                        <a class="dropdown-item" href="#" data-value="Telefon">Telefon</a>
                                        <a class="dropdown-item" href="#" data-value="Annat">Annat</a>
                                    </div>
                                </div>
                                <input type="text" class="form-control" id="contactInput" placeholder="Enter contact">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-primary" id="addCButton">Lägg till</button>
                                </div>
                            </div>
                            <ul class="list-group mt-2" id="contactinfo">
                                <div id="hiddenContactInputs"></div>
                            </ul>
                            <script>
                                document.addEventListener('DOMContentLoaded', function () {
                                    var contactIndex = 0;
                                    var addCButton = document.getElementById('addCButton');
                                    var cInputField = document.getElementById('contactInput');
                                    var contactinfo = document.getElementById('contactinfo');
                                    var contactDropDown = document.getElementById('contactDropDown');
                                    var hiddenContactInputs = document.getElementById('hiddenContactInputs');

                                    var selectedContactType = ''; // Variabel för att hålla reda på det valda kontakttypen

                                    // Lyssna på klickhändelser på dropdown-alternativen
                                    var dropdownItems = document.querySelectorAll('.dropdown-item');
                                    dropdownItems.forEach(function (item) {
                                        item.addEventListener('click', function () {
                                            selectedContactType = item.getAttribute('data-value');
                                            contactDropDown.textContent = selectedContactType;
                                        });
                                    });

                                    addCButton.addEventListener('click', function (event) {
                                        event.preventDefault();
                                        var inputValue = cInputField.value;

                                        if (inputValue.trim() !== '' && selectedContactType !== '') {
                                            addContactInfo(selectedContactType, inputValue);
                                            cInputField.value = '';
                                            selectedContactType = ''; // Återställ det valda kontakttypen efter att ha lagt till
                                            contactDropDown.textContent = 'Välj kontakttyp';
                                        }
                                    });

                                    function addContactInfo(type, info) {
                                        // Lägg till listelementet i DOM:en
                                        var listItem = document.createElement('li');
                                        listItem.className = 'list-group-item list-group-item-primary';
                                        listItem.textContent = type + ": " + info;

                                        // Skapa dolda input-fält
                                        var hiddenTypeInput = createHiddenInput(type, 'Type');
                                        var hiddenInfoInput = createHiddenInput(info, 'Info');
                                        listItem.appendChild(hiddenTypeInput);
                                        listItem.appendChild(hiddenInfoInput);

                                        // Lägg till ta-bort-knapp
                                        var removeButton = createRemoveButton(listItem);
                                        listItem.appendChild(removeButton);

                                        contactinfo.appendChild(listItem);

                                        // Uppdatera index för kontaktuppgifter
                                        updateContactIndexes();
                                    }

                                    function createHiddenInput(value, name) {
                                        var hiddenInput = document.createElement('input');
                                        hiddenInput.type = 'hidden';
                                        hiddenInput.value = value;
                                        hiddenInput.name = `ContactInfos[${contactIndex}].${name}`;
                                        return hiddenInput;
                                    }

                                    function createRemoveButton(item) {
                                        var removeButton = document.createElement('button');
                                        removeButton.textContent = 'Ta bort';
                                        removeButton.className = 'btn btn-outline-danger btn-sm float-end';
                                        removeButton.addEventListener('click', function () {
                                            item.remove();
                                            updateContactIndexes();
                                        });
                                        return removeButton;
                                    }

                                    function updateContactIndexes() {
                                        contactIndex++;
                                        var allContacts = contactinfo.querySelectorAll('li');
                                        allContacts.forEach(function (item, index) {
                                            var typeInput = item.querySelector('input[name*=".Type"]');
                                            var infoInput = item.querySelector('input[name*=".Info"]');
                                            if (typeInput && infoInput) {
                                                typeInput.name = `ContactInfos[${index}].Type`;
                                                infoInput.name = `ContactInfos[${index}].Info`;
                                            }
                                        });
                                    }
                                });
                            </script>
                        </div> 

                        <!--Beskrivning-->
                        <div class="form-floating mt-2">
                            <textarea asp-for="Information" class="form-control" placeholder="Input description here"></textarea>
                            <label asp-for="Information" class="form-label">Kort beskrivning om dig:</label>
                            <span asp-validation-for="Information" class="text-danger"></span>
                        </div>

                        <!--CV-->
                        <div class="form-floating mt-2">
                            <textarea asp-for="Resume" class="form-control" placeholder="Input resume here"></textarea>
                            <label asp-for="Resume" class="form-label">CV:</label>
                            <span asp-validation-for="Resume" class="text-danger"></span>
                        </div>

                        <!-- Bilduppladdning -->
                        <div class="form-group mt-2">
                            <label asp-for="ProfileImage" class="mb-0 mr-2">Ladda upp bild</label>
                            <div class="d-flex">
                                <input type="file" class="form-control" asp-for="ProfileImage" id="inputGroupFile02">
                                <button type="button" class="btn btn-outline-primary" for="inputGroupFile02" id="uploadBtn">Upload</button>

                            </div>
                        </div>
                        <script>
                            $(document).ready(function () {
                                $("#uploadBtn").click(function () {
                                    var input = $("#inputGroupFile02")[0];
                                    var file = input.files[0];

                                    if (file) {
                                        var reader = new FileReader();

                                        reader.onload = function (e) {
                                            $("#uploadedImage").attr("src", e.target.result).show();
                                        };

                                        reader.readAsDataURL(file);
                                    }
                                });
                            });
                        </script>

                        <div id="imageContainer" class="mt-2">
                            <img id="uploadedImage" class="img-fluid" src="#" alt="Uploaded Image" style="display: none;">
                        </div>
                        <!--Skills-->
                        <div class="form-floating mt-2">
                            <div class="input-group mt-2">
                                <input type="text" class="form-control" id="textInput" placeholder="Enter skill">
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-outline-primary" id="addSkillButton">Lägg till</button>
                                </div>
                            </div>
                            <ul class="list-group  list-group-flush" id="skillslist">
                            </ul>
                        </div>
                        <script>
                            var addButton = document.getElementById('addSkillButton');
                            var inputField = document.getElementById('textInput');
                            var skillsList = document.getElementById('skillslist');

                            addButton.addEventListener('click', function (event) {
                                event.preventDefault();
                                var inputValue = inputField.value;

                                if (inputValue.trim() !== '') {
                                    addSkill(inputValue);
                                    inputField.value = '';
                                }
                            });

                            function addSkill(skillName) {
                                var listItem = document.createElement('li');
                                listItem.className = 'list-group-item list-group-item-light';
                                listItem.textContent = skillName;

                                var hiddenInput = createHiddenInput(skillName);
                                listItem.appendChild(hiddenInput);

                                var removeButton = createRemoveButton();
                                listItem.appendChild(removeButton);

                                skillsList.appendChild(listItem);
                                updateSkillIndexes();
                            }

                            function createHiddenInput(value) {
                                var hiddenInput = document.createElement('input');
                                hiddenInput.type = 'hidden';
                                hiddenInput.value = value;
                                return hiddenInput;
                            }

                            function createRemoveButton() {
                                var button = document.createElement('button');
                                button.textContent = 'Ta bort';
                                button.className = 'btn btn-outline-danger btn-sm float-end';
                                button.addEventListener('click', function () {
                                    this.parentElement.remove();
                                    updateSkillIndexes();
                                });
                                return button;
                            }

                            function updateSkillIndexes() {
                                var allSkills = skillsList.querySelectorAll('li');
                                allSkills.forEach(function (item, index) {
                                    var input = item.querySelector('input[type="hidden"]');
                                    if (input) {
                                        input.name = 'Skills[' + index + '].Name';
                                    }
                                });
                            }

                        </script>




                        <!--Privat profil checkbox-->
                        <div class="form-group mt-2">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" asp-for="PrivateProfile" class="custom-control-input" id="privateprofilecheck">
                                <label class="custom-control-label" for="privateprofilecheck">Privat profil</label>
                            </div>
                        </div>
                        <!--Skapa knapp-->
                        <div class="form-group text-center ">
                            <button type="submit" class="btn btn-primary btn-block mt-2">Skapa</button>
                        </div>
                   </form>
                </div>
            </div>
        </div>
    </div>
</div>
